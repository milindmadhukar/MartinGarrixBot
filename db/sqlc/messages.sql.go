// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: messages.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const messageSent = `-- name: MessageSent :exec
WITH message_insert AS (
    INSERT INTO messages (message_id, channel_id, author_id, content)
    VALUES ($1, $2, $3, $4)
    ON CONFLICT DO NOTHING
    RETURNING author_id
),
user_updates AS (
    UPDATE users 
    SET 
        total_xp = $5,
        last_xp_added = $6,
        messages_sent = messages_sent + 1
    WHERE id = $3
    RETURNING id
)
SELECT 1
`

type MessageSentParams struct {
	MessageID   int64            `json:"messageId"`
	ChannelID   int64            `json:"channelId"`
	AuthorID    int64            `json:"authorId"`
	Content     string           `json:"content"`
	TotalXp     pgtype.Int4      `json:"totalXp"`
	LastXpAdded pgtype.Timestamp `json:"lastXpAdded"`
}

func (q *Queries) MessageSent(ctx context.Context, arg MessageSentParams) error {
	_, err := q.db.Exec(ctx, messageSent,
		arg.MessageID,
		arg.ChannelID,
		arg.AuthorID,
		arg.Content,
		arg.TotalXp,
		arg.LastXpAdded,
	)
	return err
}
